Comparisons:
-eq	equal to
-ne	not equal to
-lt	less than
-le	less than or equal to
-gt	greater than
-ge	greater than or equal to

File Operations:
-s	file exists and is not empty
-f	file exists and is not a directory
-d	directory exists
-x	file is executable
-w	file is writable
-r	file is readable

 a=`echo '11 + 2' | bc`
 b=`expr 11 + 2`
-n
   string is not null.

-z
  string is null, that is, has zero length


mkdir -p /foo/bar/baz  # creates bar and baz within bar under 
existing /foo

while read line; do echo "$line"; done < file.txt

#!/bin/bash
FILE=$1
while read line; do
     echo "This is a line : $line"
done < $FILE
 
awk '{print $1,"\t",$2}' input_file

head -157 ovhisq_new.tex | tail -34 > data

awk 'BEGIN {FS="&"} {print $2,$3}' data > data1

 awk '{print $1,"\t"$2,"\t"$1-$2,"\t"($1+$2)*0.5}' data2 >data3
awk '{print  $1,"\t"$2,"\t"$3,"\t"$4,"\t"$3*$4}' data3 > data4

 awk '{print $2,"\t" log($3)}' ps > ps_l

For more than one command at a time one can use
pwd ; ls

to know the size of a folder run
du -h /path/to/folder
this will list all the files in it. To see only the size run
du -sh /path/to/folder
or one can run
df -h /path/to/folder

to know the linux version run (works on any linux)
lsb_release -a

to open any file using its default application run
xdg-open <file>

For printing several files one after another one can use
cat file1 file2 > output_file

For printing the coloumns of two different files in a single
file use
paste file1 file2 > output_file

In order to redirect error message to another file type
<command> 2> err_msg

to extract data from some given row number to a particular row use
awk 'NR>2 && NR<8' input_file > output_file
awk 'NR>96 && NR<129 {print $2,"\t"$3}' out.ll.1200 > ps.ll.1200

In order to run a gnuplot script use
gnuplot input_file
or you can open gnuplot and use
load 'input_file'

In gnuplot to plot specific range (eg from row no. 100 to row no. 200)
plot "filename.txt" every ::100::200 using 1:2 with lines

If you set logscale in gnuplot and want to see the ytics as 10^1,10^2
then use
set format y "10^{%L}"

 fit y(x) 'ps.1648.cb0.in.loc' every ::15::47 u 1:2 via A,m
 fit [5:60] y(x) 'hhps.p111.M1m5280'  via A, m

 tar -xf st.tar
 tar -cf archive.tar file1 file2
 The other tar commands are 
 A, --catenate, --concatenate 	Append tar files to an archive.
c, --create 	Create a new archive.
d, --diff, --compare 	Calculate any differences between the archive and the file system.
--delete 	Delete from the archive. (This function doesn't work on magnetic tapes).
r, --append 	Append files to the end of a tar archive.
t, --list 	List the contents of an archive.
--test-label 	Test the archive label, and exit.
u, --update 	Append files, but only those that are newer than the copy in the archive.
x, --extract, --get 	Extract files from an archive.
                                                              79,1          Bot
echo by itself displays a line of text. It will take any thing within the following "..." two quotation marks, 
literally, and just print out as it is. However with echo -e you're making echo to enable interpret backslash 
escapes. So with this in mind here are some examples

INPUT: echo "abc\n def \nghi" 
OUTPUT:abc\n def \nghi

INPUT: echo -e "abc\n def \nghi"
OUTPUT:abc
 def 
ghi

Difference between -n and \c
echo -n "Enter your name: "
read name
echo "Hello, $name"

This will work on some systems, and will look like this:

Enter your name: Steve
Hello, Steve

However, on other systems, you need to write the code like this:

echo "Enter your name: \c"
read name
echo "Hello, $name"

if command in awk
Eg1.
$ awk '{
if ($3 =="" || $4 == "" || $5 == "")
    print "Some score for the student",$1,"is missing";'
}' student-marks
Some score for the student RinRao is missing
Eg2.
$ awk '{
if ($3 >=35 && $4 >= 35 && $5 >= 35)
    print $0,"=>","Pass";
else
    print $0,"=>","Fail";
}' student-marks
Jones 2143 78 84 77 => Pass
Gondrol 2321 56 58 45 => Pass

if you write a awk file (i.e .awk extension) then run it
awk -f <file-name.awk> <input-file>

one can start writing a file directly in terminal using
cat > file-name
Then save it using Ctrl+d

 pdf2ps Lattice2017_416_protick.pdf
ps2pdf14 -dPDFSETTINGS=/prepress Lattice2017_416_protick.ps doc2.pdf
